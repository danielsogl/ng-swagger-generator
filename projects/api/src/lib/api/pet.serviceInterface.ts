/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.7
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiResponse } from '../model/models';
import { Pet } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface AddPetRequestParams {
    body: Pet;
}

export interface DeletePetRequestParams {
    petId: number;
    apiKey?: string;
}

export interface FindPetsByStatusRequestParams {
    status: Array<'available' | 'pending' | 'sold'>;
}

export interface FindPetsByTagsRequestParams {
    tags: Array<string>;
}

export interface GetPetByIdRequestParams {
    petId: number;
}

export interface UpdatePetRequestParams {
    body: Pet;
}

export interface UpdatePetWithFormRequestParams {
    petId: number;
    name?: string;
    status?: string;
}

export interface UploadFileRequestParams {
    petId: number;
    additionalMetadata?: string;
    file?: Blob;
}


export interface PetServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Add a new pet to the store
     * 
* @param requestParameters
     */
    addPet(requestParameters: AddPetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Deletes a pet
     * 
* @param requestParameters
     */
    deletePet(requestParameters: DeletePetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Finds Pets by status
     * Multiple status values can be provided with comma separated strings
* @param requestParameters
     */
    findPetsByStatus(requestParameters: FindPetsByStatusRequestParams, extraHttpRequestParams?: any): Observable<Array<Pet>>;

    /**
     * Finds Pets by tags
     * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
* @param requestParameters
     
     * @deprecated
     */
    findPetsByTags(requestParameters: FindPetsByTagsRequestParams, extraHttpRequestParams?: any): Observable<Array<Pet>>;

    /**
     * Find pet by ID
     * Returns a single pet
* @param requestParameters
     */
    getPetById(requestParameters: GetPetByIdRequestParams, extraHttpRequestParams?: any): Observable<Pet>;

    /**
     * Update an existing pet
     * 
* @param requestParameters
     */
    updatePet(requestParameters: UpdatePetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Updates a pet in the store with form data
     * 
* @param requestParameters
     */
    updatePetWithForm(requestParameters: UpdatePetWithFormRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * uploads an image
     * 
* @param requestParameters
     */
    uploadFile(requestParameters: UploadFileRequestParams, extraHttpRequestParams?: any): Observable<ApiResponse>;

}
